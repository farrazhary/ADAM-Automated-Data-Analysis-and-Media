{
  "name": "ADAM",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a8f7476c-6df7-4473-9fc3-1719d4862c0b",
              "name": "Text",
              "value": "={{ $json.messages[0].text.body }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1728,
        1152
      ],
      "id": "aaaba8cb-0595-4ed9-a059-eb9458eace4e",
      "name": "Text Prompt"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.messages[0].audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "0561ccd1-17c9-4ac5-bcf8-f5c5c40244c1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "02971cb0-17b6-44da-a6bf-b435c0a217fc",
                    "leftValue": "={{ $json.messages[0].image }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "eef7a381-cad6-41e6-bcbe-38edd6f76c51",
                    "leftValue": "={{ $json.messages[0].document }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Documents"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3d2560d3-66c6-45cf-8ad0-fe3ef5cb6e77",
                    "leftValue": "={{ $json.messages[0].text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "95f59b35-1d07-40a7-8423-bea565f5b850",
                    "leftValue": "={{ $json.messages[0].video }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2016,
        864
      ],
      "id": "9045fa4c-31f3-4caf-8863-07e02b6f0c8c",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $json.messages[0].audio.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -1728,
        336
      ],
      "id": "b698f422-359d-4f1e-93f1-0e5750f89a23",
      "name": "Get Audio",
      "webhookId": "45225106-b56a-4e81-a31a-dbb65095c9b6",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1552,
        336
      ],
      "id": "6af225b4-be72-4f33-a852-8bc126a3478d",
      "name": "Download Audio",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1360,
        336
      ],
      "id": "98636f0c-e8d8-4f3d-ad92-12bc54f3f51b",
      "name": "Transcribe a recording",
      "credentials": {
        "googlePalmApi": {
          "id": "ApEjqIIqGebkaGoU",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1744984c-ff71-4dc6-8aa0-d01ef4d9b58e",
              "name": "Text",
              "value": "={{ $json.content.parts[0].text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1184,
        336
      ],
      "id": "c3cac774-0888-448a-8578-feb3e1980988",
      "name": "Audio Prompt"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "=<WHATSAPP_PHONE_NUMBER_ID>",
        "recipientPhoneNumber": "={{ $('WhatsApp Input').item.json.messages[0].from }}",
        "textBody": "={{ $('General Agent').item.json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1456,
        528
      ],
      "id": "2afabba1-9c1a-4617-b02b-997d8fbbf67c",
      "name": "Text Responds",
      "webhookId": "324ed67c-f817-401c-bedc-94d65b051665",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $json.messages[0].image.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -1728,
        608
      ],
      "id": "e169e169-3322-4f11-bf07-c1ece69c2bbf",
      "name": "Get Image URL",
      "webhookId": "13de18ca-29db-487c-86d5-fb0ce6958599",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1552,
        608
      ],
      "id": "3d0767d3-826c-41fd-87f2-916b88c21c0d",
      "name": "Download Image",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "=Describe this image in detail and tell user what is the image, is it document or a picture.\n\nIf document contained box information like \"to:\" and \"delivery\" section, catch that information in detail. Inside \"to:\" and \"delivery section\" there is company name (usually in the first line) and addresses (usually after the second line until the end)",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1360,
        608
      ],
      "id": "45c3e780-6322-4f2a-9539-665b1df7817e",
      "name": "Analyze image",
      "credentials": {
        "googlePalmApi": {
          "id": "ApEjqIIqGebkaGoU",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "45d44da1-e846-40a6-83ba-62943e789aad",
              "name": "Text",
              "value": "=# The user provided the following image and text.\n\n## Image Description:\n{{ $('Analyze image').item.json.content.parts[0].text }}\n\n## User Message:\n{{ $('WhatsApp Input').item.json.messages[0].image.caption || \"Describe this image.\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -624,
        752
      ],
      "id": "0e91ce18-e0ba-47ce-bda6-efb8222dd59b",
      "name": "Image Text Prompt"
    },
    {
      "parameters": {
        "jsCode": "const caption = ($('WhatsApp Input').first().json.messages[0].image.caption || \"describe this image\").toString().toLowerCase();\n\nconst keywords = [\"generate foto\", \"generate gambar\", \"generate design\", \"generate desain\", \"generate poster\", \"generate brosur\", \"buatlah foto\", \"buatlah gambar\", \"buatlah desain\", \"buatlah design\", \"buatin foto\", \"buatlah brosur\", \"buatlah poster\", \"buatin gambar\", \"buatin design\", \"buatin desain\", \"buatin brosur\", \"buatin brosur\", \"buatkan foto\", \"buatkan gambar\", \"buatkan desain\", \"buatkan design\", \"buatkan brosur\", \"buatkan poster\", \"buat foto\", \"buat gambar\", \"buat design\", \"buat desain\", \"buat poster\", \"buat brosur\", \"bikinin foto\", \"bikinin gambar\", \"bikinin desain\", \"bikinin design\", \"bikinin brosur\", \"bikinin poster\", \"bikin design\", \"bikin desain\", \"bikin foto\", \"bikin gambar\", \"bikin brosur\", \"bikin poster\"];\n\nconst keywords2 = [\"generate video\", \"generate film\", \"generate iklan\",\"buatlah video\", \"buatlah film\", \"buatlah iklan\", \"buatin video\", \"buatin film\", \"buatin iklan\", \"buatkan video\", \"buatkan film\", \"buatin iklan\", \"buat video\", \"buat film\", \"buat iklan\", \"bikin video\", \"bikin film\", \"bikin iklan\", \"bikinin video\", \"bikinin film\", \"bikinin iklan\"];\n\nreturn [{\n  json: {\n    isGenerateIntent: keywords.some(k => caption.includes(k)),\n    isVideoGenerateIntent: keywords2.some(k => caption.includes(k))\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        752
      ],
      "id": "4e2c4674-9b78-404d-be54-c133d217816d",
      "name": "Prompt Keywords"
    },
    {
      "parameters": {
        "resource": "image",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash-exp-image-generation",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash-exp-image-generation"
        },
        "prompt": "=# The user provided following image and text\n\n## Image Analysis Description:\n{{ $('Analyze image').item.json.content.parts[0].text }}\n\n## User Message:\n{{ $('WhatsApp Input').item.json.messages[0].image.caption }}\n\n## Generate Image from User Message",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1184,
        720
      ],
      "id": "46421ed5-e51f-4c18-b335-cc587296809e",
      "name": "Generate an Image",
      "credentials": {
        "googlePalmApi": {
          "id": "ApEjqIIqGebkaGoU",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/text-to-speech/NOpBlnGInO9m6vDvFkFC",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1360,
        384
      ],
      "id": "8ea8cee5-f6a2-4f3c-b118-afe84b312eae",
      "name": "Generate Audio",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NGL8VS2GT9oa8sjJ",
          "name": "Elevenlabs API"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": {{ $env.WHATSAPP_PHONE_NUMBER_ID }},
        "recipientPhoneNumber": "={{ $('WhatsApp Input').item.json.messages[0].from }}",
        "messageType": "audio",
        "mediaPath": "useMedian8n",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1536,
        384
      ],
      "id": "5f948cef-f7d6-4c0d-a169-2afb15d6d8d0",
      "name": "Audio Responses",
      "webhookId": "dd2d7713-46b0-44c4-aa4b-c9c66c30ffdb",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": {{ $env.WHATSAPP_PHONE_NUMBER_ID }},
        "recipientPhoneNumber": "={{ $('WhatsApp Input').first().json.messages[0].from }}",
        "messageType": "image",
        "mediaPath": "useMedian8n",
        "additionalFields": {
          "mediaCaption": "={{ $('Image Agent').item.json.output }}"
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1440,
        816
      ],
      "id": "80e34b20-eea0-4f76-827d-c5af26056c7e",
      "name": "Image Responses",
      "webhookId": "6c50470f-051e-4b61-a326-91fd2ff59711",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Ambil isi text dari Analyze Image\nconst textRaw = $input.first().json.content.parts[0].text || \"\";\nconst text = textRaw.toLowerCase();\n\n// Ambil caption dari WhatsApp Trigger\nconst caption = ($('WhatsApp Input').first().json.messages[0].image.caption || \"describe this image\").toLowerCase();\n\n// Kata kunci yang akan memicu intent\nconst keywords = [\"input\", \"masuk\"];\n\n// Deteksi konteks dokumen, tapi hindari kalimat yang menyatakan \"bukan dokumen\"\nconst isDocument = (\n  (text.includes(\"document\") || text.includes(\"dokumen\")) &&\n  !text.includes(\"not a document\") &&\n  !text.includes(\"bukan dokumen\")\n);\n\n// Output\nreturn [{\n  json: {\n    isGenerateIntent: keywords.some(k => caption.includes(k)),\n    isDocument\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1184,
        608
      ],
      "id": "07e5b780-eaee-473e-b53a-003eeb6fe518",
      "name": "Document Checker"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "eda3a006-d804-4f86-a7c3-b97764c005a1",
              "leftValue": "={{ $('WhatsApp Input').item.json.messages[0].audio }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1104,
        512
      ],
      "id": "bf225c9b-c523-4d02-b17d-9fb467ce55c8",
      "name": "Audio or Text Responses"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f25b8adc-2cb5-411e-9506-ee7cacabd5f7",
              "leftValue": "={{ $json.isGenerateIntent }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "b5d0c345-f7de-4e1e-9323-cbd7e0c8dfc3",
              "leftValue": "={{ $json.isDocument }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "99a4d6ce-1a98-4bed-8397-f40b8148dee2",
              "leftValue": "={{ $('WhatsApp Input').item.json.messages[0].image }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -992,
        608
      ],
      "id": "63118bb2-057b-4e20-a1d1-9450b2015894",
      "name": "is document ?"
    },
    {
      "parameters": {
        "text": "={{ $('Merge Analysis').item.json.finalText }} and {{ $json.output }} and {{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "Invoice Number",
              "description": "Invoice Number",
              "required": true
            },
            {
              "name": "Invoice Date",
              "description": "Invoice Date",
              "required": true
            },
            {
              "name": "PO Reference",
              "description": "Order Reference (PO)",
              "required": true
            },
            {
              "name": "Delivery Date",
              "description": "Delivery Date",
              "required": true
            },
            {
              "name": "Payment Terms",
              "description": "Payment Terms",
              "required": true
            },
            {
              "name": "Currency",
              "description": "Currency",
              "required": true
            },
            {
              "name": "Subtotal (Rp)",
              "description": "Input Sub Total. Do not include \",\" or \".\"",
              "required": true
            },
            {
              "name": "Total (Rp)",
              "description": "Input Total. Do not include \",\"",
              "required": true
            },
            {
              "name": "Customer Name",
              "description": "First company name inside \"To:\" boxes",
              "required": true
            },
            {
              "name": "Address",
              "description": "Extract the second line until the end of \"To:\" section (excluding company name)",
              "required": true
            },
            {
              "name": "Received By",
              "description": "Extract the first company name inside \"Delivery:\" boxes",
              "required": true
            },
            {
              "name": "Vendor Address",
              "description": "Extract the full address from second line of \"Delivery :\" section (excluding company name)",
              "required": true
            },
            {
              "name": "Transaction id",
              "description": "=Extract Invoice id from {{ $json.output }}",
              "required": true
            },
            {
              "name": "Plant Location",
              "description": "=Extract the second line until the end of \"Delivery:\" section (excluding company name)",
              "required": true
            },
            {
              "name": "Customer ID",
              "description": "=Extract Customer id from {{ $json.output }}",
              "required": true
            },
            {
              "name": "Vendor ID",
              "description": "=Extract Vendor ID from {{ $json.output }}",
              "required": true
            },
            {
              "name": "Order id",
              "description": "=Extract Order id from  {{ $json.output }}",
              "required": true
            },
            {
              "name": "PO Number",
              "description": "=P.O. Number",
              "required": true
            },
            {
              "name": "PO Date",
              "description": "Date",
              "required": true
            },
            {
              "name": "=Order Reference",
              "description": "Order Reference",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        832,
        64
      ],
      "id": "882271f5-5566-47a4-808e-dc27c3669207",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": {{ $env.WHATSAPP_PHONE_NUMBER_ID }},
        "recipientPhoneNumber": "={{ $('WhatsApp Input').first().json.messages[0].from }}",
        "textBody": "={{ $('Tasks Agent').item.json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1504,
        64
      ],
      "id": "bfc16ba7-6146-4a99-ae8c-1f819a88d173",
      "name": "Output messages",
      "webhookId": "6c25f8d2-c6b9-4a0b-b512-9f5112ede55a",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const caption = ($input.first().json.Text).toLowerCase();\n\nconst keywords = [\"generate foto\", \"generate gambar\", \"generate design\", \"generate desain\", \"generate poster\", \"generate brosur\", \"buatlah foto\", \"buatlah gambar\", \"buatlah desain\", \"buatlah design\", \"buatin foto\", \"buatlah brosur\", \"buatlah poster\", \"buatin gambar\", \"buatin design\", \"buatin desain\", \"buatin brosur\", \"buatin brosur\", \"buatkan foto\", \"buatkan gambar\", \"buatkan desain\", \"buatkan design\", \"buatkan brosur\", \"buatkan poster\", \"buat foto\", \"buat gambar\", \"buat design\", \"buat desain\", \"buat poster\", \"buat brosur\", \"bikinin foto\", \"bikinin gambar\", \"bikinin desain\", \"bikinin design\", \"bikinin brosur\", \"bikinin poster\", \"bikin design\", \"bikin desain\", \"bikin foto\", \"bikin gambar\", \"bikin brosur\", \"bikin poster\"];\n\nconst keywords2 = [\"generate video\", \"generate film\", \"generate iklan\",\"buatlah video\", \"buatlah film\", \"buatlah iklan\", \"buatin video\", \"buatin film\", \"buatin iklan\", \"buatkan video\", \"buatkan film\", \"buatin iklan\", \"buat video\", \"buat film\", \"buat iklan\", \"bikin video\", \"bikin film\", \"bikin iklan\", \"bikinin video\", \"bikinin film\", \"bikinin iklan\"];\n\nreturn [{\n  json: {\n    isGenerateIntent: keywords.some(k => caption.includes(k)),\n    isVideoGenerateIntent: keywords2.some(k => caption.includes(k))\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1552,
        1152
      ],
      "id": "190f8923-62eb-4688-8092-8e958a4c38f2",
      "name": "Prompt User"
    },
    {
      "parameters": {
        "resource": "image",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash-exp-image-generation",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash-exp-image-generation"
        },
        "prompt": "=# The user provided following image and text\n\n## Image Analysis Description:\n{{ $('Image Agent').item.json.output }}\n\n## User Message:\n{{ $('Text Prompt').item.json.Text }}\n\n## Generate Image from User Message",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1184,
        912
      ],
      "id": "277d9f58-34de-4eb0-aaa3-8d17ed6e9a7c",
      "name": "Generate an image",
      "credentials": {
        "googlePalmApi": {
          "id": "ApEjqIIqGebkaGoU",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.Text || $('Audio Prompt').item.json?.Text }}",
        "options": {
          "systemMessage": "=You are a helpful assistant called ADAM (Automated Data Analytics and Media)and always respond to every conversation in a friendly communication style and tone using the Indonesian language.\n\nThe first time you interact with a user, greet them using their name: {{ $('WhatsApp Input').item.json.contacts[0].profile.name }}.\n\nYou are currently speaking to {{ $('WhatsApp Input').item.json.contacts[0].profile.name }}.\n\nYour responses will be forwarded into the chat, so to keep it clean, do not use any markdown or any text formatting (include *).\n\nIf a user asks about who created this program, reply with the following message in a cheerful and creative tone, with emojis:\n\n\"Automation ini dibuat oleh Farras Azhary ✨  \n📍 GitHub: github.com/farrazhary  \n🔗 LinkedIn: linkedin.com/in/farrasazhary"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        576,
        512
      ],
      "id": "aa08d5cb-27df-4b53-8c80-43a1617c3067",
      "name": "General Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('WhatsApp Input').item.json.messages[0].image?.caption ? $json.finalText : \"Describe this document\" }} and before responding, run the available tools to fetch the latest data from these sheets: Invoice, Purchase_Order, Product, Customer, and Vendor.\n\nFrom each sheet, retrieve the last ID, increment it by one, and use the resulting number as the new ID for the respective entry.\n\nUse the available context data from the document to compose a detailed response.\n\nThen, generate a response with the following structure:\n\n1. Confirm that the document has been successfully inserted into the system.\n2. Mention that the new ID has been automatically generated.\n3. Present the full document details. Your responds will forwarded into chat, so to make it clean don't use any markdown format, just text",
        "options": {
          "systemMessage": "=Always respons every conversation with friendly communication style and tone using bahasa indonesia\n\nPlease inform the last id from Get row(s) in sheet Tools\n\nYour responds will forwarded into chat, so to make it clean don't use any markdown format, just text"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        368,
        64
      ],
      "id": "cbe1e3fa-0dcc-4875-9bef-111a410a957f",
      "name": "Tasks Agent"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $json.messages[0].document.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -1728,
        912
      ],
      "id": "39346e63-f5a1-4eab-a701-bcfb80652e1b",
      "name": "Get Docs",
      "webhookId": "656768ef-17d3-42d3-8356-87a6d8f13c23",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1552,
        912
      ],
      "id": "2d48dc8a-33cc-4faf-8520-21b5658a1efb",
      "name": "Download Docs",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "resource": "document",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "Describe this document in detail.\n\nIf document contained box information like \"to:\" and \"delivery\" section, catch that information in detail. Inside \"to:\" and \"delivery section\" there is company name (usually in the first line) and addresses (usually after the second line until the end)",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1360,
        912
      ],
      "id": "370c390e-1159-42f5-9fd4-e3cd2caa5a60",
      "name": "Analyze document",
      "credentials": {
        "googlePalmApi": {
          "id": "ApEjqIIqGebkaGoU",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let finalText;\n\ntry {\n  finalText = $('Analyze image').first().json.content.parts[0].text;\n} catch (e) {\n  try {\n    finalText = $input.first().json.content.parts[0].text;\n  } catch (e2) {\n    finalText = \"Tidak ada konten yang bisa dianalisis.\";\n  }\n}\n\nreturn [{ json: { finalText } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        144,
        64
      ],
      "id": "e83c0968-624d-4a06-b27a-1b6a82050b09",
      "name": "Merge Analysis"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get row(s) in sheet in Google Sheets",
        "documentId": {
          "__rl": true,
          "value": "",
          "mode": "list",
          "cachedResultName": "Structured_Transaction_Record",
          "cachedResultUrl": ""
        },
        "sheetName": {
          "__rl": true,
          "value": 1789571609,
          "mode": "list",
          "cachedResultName": "Invoice",
          "cachedResultUrl": ""
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        368,
        224
      ],
      "id": "381b887c-be0f-4fc1-9951-3666d2508fdb",
      "name": "Get row(s) in Invoice sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yL2v3aFUe9qm7tFd",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get row(s) in sheet in Google Sheets",
        "documentId": {
          "__rl": true,
          "value": "",
          "mode": "list",
          "cachedResultName": "Structured_Transaction_Record",
          "cachedResultUrl": ""
        },
        "sheetName": {
          "__rl": true,
          "value": 1478792430,
          "mode": "list",
          "cachedResultName": "Purchase_Order",
          "cachedResultUrl": ""
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        912,
        224
      ],
      "id": "a8eb89af-ef23-4a41-9fce-07c17bc3df41",
      "name": "Get row(s) in Purchase_Order sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yL2v3aFUe9qm7tFd",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get row(s) in sheet in Google Sheets",
        "documentId": {
          "__rl": true,
          "value": "",
          "mode": "list",
          "cachedResultName": "Structured_Transaction_Record",
          "cachedResultUrl": ""
        },
        "sheetName": {
          "__rl": true,
          "value": 487332740,
          "mode": "list",
          "cachedResultName": "Product",
          "cachedResultUrl": ""
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        512,
        224
      ],
      "id": "e26bd0ec-0f4c-48ba-8ade-455e417f6c6d",
      "name": "Get row(s) in Product sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yL2v3aFUe9qm7tFd",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get row(s) in sheet in Google Sheets",
        "documentId": {
          "__rl": true,
          "value": "",
          "mode": "list",
          "cachedResultName": "Structured_Transaction_Record",
          "cachedResultUrl": ""
        },
        "sheetName": {
          "__rl": true,
          "value": 893433988,
          "mode": "list",
          "cachedResultName": "Customer",
          "cachedResultUrl": ""
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        640,
        224
      ],
      "id": "4177f9bc-6b46-4662-9217-241c56c2abd1",
      "name": "Get row(s) in Customer sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yL2v3aFUe9qm7tFd",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get row(s) in sheet in Google Sheets",
        "documentId": {
          "__rl": true,
          "value": "",
          "mode": "list",
          "cachedResultName": "Structured_Transaction_Record",
          "cachedResultUrl": ""
        },
        "sheetName": {
          "__rl": true,
          "value": 138892484,
          "mode": "list",
          "cachedResultName": "Vendor",
          "cachedResultUrl": ""
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        784,
        224
      ],
      "id": "084800dd-02da-49a6-aa13-8fd21ed70137",
      "name": "Get row(s) in vendor sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yL2v3aFUe9qm7tFd",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ \n  $json.messages?.[0]?.text?.trim() \n    || $json.messages?.[0]?.image?.caption?.trim() \n    || \"Describe this image\"\n}}",
        "options": {
          "systemMessage": "=You are a helpful assistant.\\n\\nThe user provides an image (sometimes with a caption or message). You must analyze the image and respond helpfully based on either the visual content or the user's accompanying text.\\n\\nIf the user sends only an image without description, describe the image in detail.\\n\\nIf the user provides a question or instruction, you must answer or respond accordingly, based on the image and context.\\n\\nAlways provide clear and helpful responses.\\n\\nNever say you cannot see the image. You have full image analysis capability.\nAlways respond to every conversation in a friendly communication style and tone using the Indonesian language.\n\nImportant :\nYour responses will be forwarded into the chat, so to keep it clean, do not use any markdown or any text formatting (include *)."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        576,
        816
      ],
      "id": "eac78803-3979-4f8f-b45e-647a76ef3322",
      "name": "Image Agent"
    },
    {
      "parameters": {
        "resource": "media",
        "operation": "mediaUrlGet",
        "mediaGetId": "={{ $json.messages[0].video.id }}"
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -1712,
        1504
      ],
      "id": "e4f524f3-169f-4fa4-b6c5-756954138c24",
      "name": "Get Video URL",
      "webhookId": "31e3fe94-ae9b-4ad0-a00b-3b515491fa1c",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "whatsAppApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1552,
        1504
      ],
      "id": "998013ea-f69b-49e7-9c90-a25654b04e48",
      "name": "Download Video",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "Describe about this video in detail and transcribe the audio from this video.",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1392,
        1504
      ],
      "id": "c53aed91-7696-4252-9231-07a2f57c36f9",
      "name": "Analyze video",
      "credentials": {
        "googlePalmApi": {
          "id": "ApEjqIIqGebkaGoU",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Ambil isi text dari Analyze Video\nconst text = $input.first().json.Text.toLowerCase() || \"\";\n\n// Ambil caption dari WhatsApp Trigger\nconst caption = ($('WhatsApp Input').first().json.messages[0].video.caption || \"describe this video\").toLowerCase();\n\n// Kata kunci yang akan memicu intent\nconst keywords = [\"generate video\", \"generate film\", \"generate iklan\",\"buatlah video\", \"buatlah film\", \"buatlah iklan\", \"buatin video\", \"buatin film\", \"buatin iklan\", \"buatkan video\", \"buatkan film\", \"buatin iklan\", \"buat video\", \"buat film\", \"buat iklan\", \"bikin video\", \"bikin film\", \"bikin iklan\", \"bikinin video\", \"bikinin film\", \"bikinin iklan\"];\n\n// Tambahan deteksi konteks dokumen\nconst isDocument = text.includes(\"document\") || text.includes(\"dokumen\");\n\nreturn [{\n  json: {\n    isGenerateIntent: keywords.some(k => caption.includes(k)),\n    isDocument\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1072,
        1504
      ],
      "id": "fccfc6eb-a2d3-4c79-8062-80b63f67b61a",
      "name": "Video Prompt"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('WhatsApp Input').item.json.messages[0].image }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "20118655-0cb2-47b5-8cf6-5348d5059c64"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "From Images"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "31701b9a-ff85-4a36-8bcc-6efe35cb7cb4",
                    "leftValue": "={{ $('WhatsApp Input').item.json.messages[0].text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "From Texts"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        896,
        816
      ],
      "id": "2ad37e29-fa60-4391-b1b7-7bb8d25c2296",
      "name": "Switch Text or Images"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.isGenerateIntent === true && $json.isVideoGenerateIntent === false }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    },
                    "id": "bfa7507d-ea23-4037-a83a-274885f5a81f"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Generate Image Requests"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "16ce9862-3caf-45e9-a451-90bbcfcff116",
                    "leftValue": "={{ $json.isGenerateIntent === false && $json.isVideoGenerateIntent === false }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Generate Text Requests"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cc0e70d8-1fa6-42be-ab61-9d4e471c61e7",
                    "leftValue": "={{ $json.isGenerateIntent === false && $json.isVideoGenerateIntent === true }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Generate Video Requests"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1360,
        1136
      ],
      "id": "bbfa4028-3724-4766-b360-2dcf1862e4ed",
      "name": "Switch Text, Images or Video"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c93cc28b-363b-4d5b-b78e-58c8254e5758",
              "leftValue": "={{ $json.isGenerateIntent }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "41d34b92-c8be-440f-8b95-062ea5600e46",
              "leftValue": "={{ $('WhatsApp Input').item.json.messages[0] }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -896,
        1504
      ],
      "id": "6459379b-9040-48a6-85ff-44137c61a419",
      "name": "Ask for Video ?"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=User Requests:\n{{ $json.Text || \"Describe this video\" }}\n\nUse the following information to create a continuous, flowing cinematic narrative:\n\nTitle: [insert title here]\n\nCharacter Reference: [character description, appearance, clothing, style]\n\nNegative Prompt: blurry, low resolution, distorted faces, unnatural anatomy, incorrect object placement, floating objects, misaligned perspective, body parts clipping, unnatural hand positions, warped text, broken reflections, messy background, irrelevant props, dull colors, poor lighting, unrealistic proportions.\n\nScene Details:\n\nThe total video is divided into 4 segments, each lasting 8 seconds (total duration: 32 seconds).\n\nThese segments must come from one continuous storyline that flows smoothly without drastic changes.\n\nEach scene description should include: scene details, visual style, camera angle, lighting, environment/room, key elements, camera or object movement, main action, focal object, character emotion, scene ending, dialogue or narration (in Indonesian with Gen Z style), voice, emotional tone, soundtrack, as well as facial details (face shape, eyes, eyebrows, nose, mouth, skin tone, hairline, nationality) if a character is visible. If no character/face is present, still describe the narrator’s consistent voice and emotional tone for continuity. Always keep the same gender, age, and vocal identity for the narrator across all scenes.\n\nCreation Instructions:\n\n1. Imagine the entire video as a single cinematic sequence from start to finish.\n2. Break this narrative into four paragraphs, each representing the progression of scenes every 8 seconds.\n3. Use rich cinematic language (e.g., camera angles, lighting, atmosphere, movement).\n4. Keep the subject, setting, camera perspective, visual tone, and emotional atmosphere consistent throughout.\n5. Ensure smooth transitions between sections, so it feels like one continuous long shot without harsh cuts.\n6. Do not add new characters, objects, or styles that weren’t established earlier.\n+7. Always maintain the same narrator voice across all scenes, even if the scene does not show any character or face (misalnya hanya objek/laptop). Jika tidak ada wajah yang muncul, tetap sertakan deskripsi voice dan tone narator yang konsisten dari awal hingga akhir.\n8. Avoid numbering, timestamps, or labels in the output.\n\nExpected Output:\nFour consecutive paragraphs in Indonesian that describe a single continuous cinematic story with a total duration of 32 seconds, split evenly into 4 segments (8 seconds each).\n",
        "options": {
          "systemMessage": "=You are a helpful assistant specialized in generating detailed and visually cohesive video prompts.\n\nThe user provides a video or a short description/message. Your task is to analyze the input and create a structured narrative suitable for video generation.\n\nAlways:\n- Describe the visual content using cinematic language (camera movements, lighting, atmosphere).\n- Maintain consistency across scenes (same subject, setting, tone, style).\n- Split the narrative into 4 logically connected scenes forming a complete 32-second story (each scene ~8 seconds).\n- Ensure the scenes flow naturally, avoiding abrupt transitions.\n- Use vivid and descriptive language that helps guide video generation models.\n- Avoid stating video duration or mentioning timestamps.\n- At the end, return the full prompt as a single concatenated sentence that captures the entire narrative and structure. This final prompt will be used in the next step to generate a video.\n\nNever say you cannot see the content (you always have full video understanding capability).\n\nReturn only the final full prompt sentence. Do not include explanations, formatting, or headers like “Scene 1:”, just merge the scenes into a fluid descriptive narrative."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        384,
        1504
      ],
      "id": "23a12323-b9bd-4e62-a5cf-b160d7c3670f",
      "name": "Video Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9e37bfa0-6d2e-4cf9-8dc1-17e0b7180f5e",
              "name": "Text",
              "value": "=# User Input Context\n\n{{ $json.content?.parts[0]?.text \n  ? `The user has provided a video and a related message.`\n  : `The user has only provided a video.` }}\n\n## Video Description:\n{{ $json.content?.parts[0]?.text || \"(No video description provided)\" }}\n\n## User Message:\n{{ $('WhatsApp Input').item.json.messages[0].video?.caption || $('WhatsApp Input').item.json.messages[0].text || \"Describe the video, including both visual and audio content.\" }}\n\n---\n\n# Instruction\n\n1. If the user's message asks about the content or topic of the video, generate a helpful explanation based on the video description.\n\n2. If the video includes audio-based information (such as dialogue, narration, or podcast), extract the key points and summarize the spoken content alongside the visual elements.\n\n3. If the user asks to create a similar video, analyze the content and generate a creative brief that reflects the theme, tone, and structure of the original.\n\n4. If the user does **not provide any message**, automatically describe the video — covering both the **visual content** and any **spoken/audio content** provided in the video description.  \n   The response should assume the user is asking: _“Describe the video, including what’s said and what’s shown.”_\n\nRespond clearly and consistently. Use bullet points or structured paragraphs if needed.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1232,
        1504
      ],
      "id": "145ffacb-1a22-4ce8-bb74-1cbf59dce782",
      "name": "Video Text Prompt"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Merge Analysis').item.json.finalText }}",
                    "rightValue": "Invoice",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "5a39295a-b2dc-4fe6-83f6-3b04fb99de3a"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Invoice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7561a83e-d4a4-4141-910d-bb7138093ce3",
                    "leftValue": "={{ $('Merge Analysis').item.json.finalText }}",
                    "rightValue": "=Purchase Order",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Purchase Order"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1248,
        64
      ],
      "id": "e2b1eb5b-b440-44ca-9a04-f7611c7e78ce",
      "name": "Switch Document"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "67676550-c988-4983-9efe-8301865f07fe",
              "name": "=PROJECT_ID",
              "value": "<your VertexAI PROJECT_id>",
              "type": "string"
            },
            {
              "id": "e693abfe-24df-4089-8741-bfbbfde8f5da",
              "name": "=MODEL_VERSION",
              "value": "veo-3.0-fast-generate-001",
              "type": "string"
            },
            {
              "id": "f8cc2abb-7971-4cdd-9c0e-9d94420f1b98",
              "name": "LOCATION",
              "value": "us-central1",
              "type": "string"
            },
            {
              "id": "20b4947a-37e6-47ab-a4d5-29952a4edf1d",
              "name": "API_ENDPOINT",
              "value": "us-central1-aiplatform.googleapis.com",
              "type": "string"
            },
            {
              "id": "2089cace-2de5-4c05-8806-4e87eb9e3ab4",
              "name": "TEXT_PROMPT_PART_1",
              "value": "={{ $json.output['0-8'] }}",
              "type": "string"
            },
            {
              "id": "198ff021-e6a4-422a-92ae-b59c7819e5c5",
              "name": "TEXT_PROMPT_PART_2",
              "value": "={{ $json.output['8-16'] }}",
              "type": "string"
            },
            {
              "id": "c21d9cfb-7e7d-441a-a597-57c7febf9471",
              "name": "TEXT_PROMPT_PART_3",
              "value": "={{ $json.output['16-24'] }}",
              "type": "string"
            },
            {
              "id": "64d96350-d475-4e2f-9c26-730bdf98c36c",
              "name": "TEXT_PROMPT_PART_4",
              "value": "={{ $json.output['24-32'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1248,
        2016
      ],
      "id": "13407158-f5e2-4759-9fc0-1ac132988a11",
      "name": "Final Video Prompt"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        576,
        1360
      ],
      "id": "c5f312a1-9072-441f-acb1-028421ef103f",
      "name": "Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "zmKSyYEa5jVyzYKI",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -640,
        1824
      ],
      "id": "0be03fdc-cff0-480d-b0a8-002257c43c5e",
      "name": "Wait",
      "webhookId": "46a5805a-a941-490b-9b1c-a1b2ac0ad9ee"
    },
    {
      "parameters": {
        "text": "=User Requests :\n{{ $('WhatsApp Input').first().json.messages[0].text.body }}\n\nConcept :\n{{$('Video Agent').item.json.output }}\n\nMandatory Requirements:\nMake sure your prompts are consistent by re-enter first prompt character description, background, camera angle across sections so the output is consistent too. Lastly and most important, response using Indonesian language and for the 'scipt' part use gen Z Indonesian language.",
        "attributes": {
          "attributes": [
            {
              "name": "=0-8",
              "description": "=Extract information from 0–8 seconds and create a JSON Object Prompt in the following format. \n\nThe video is a single continuous sequence. In this segment, you must:\n- Fully introduce the \"character_reference\" and \"facial_description\" attributes.\n- Clearly establish the initial environment, camera angles, lighting tone, and emotional atmosphere.\n- Provide a complete visual and contextual introduction to the main subject, avoiding vague descriptions.\n- Ensure the emotional and visual tone sets a clear starting point for the narrative, possibly suggesting the theme or mood that will continue in later segments.\n- Describe only what is visually seen during the 0–8 second timeframe, assuming this is the first visible moment in the sequence.\n\nReplace only the \"description\" field with the input extracted from that timeframe. All other fields must be filled creatively and appropriately based on the description and consistent with it.\n\nReturn only the JSON object in this exact format:\n{\n  \"title\": \"\",\n  \"character_reference\": \"\",\n  \"negative_prompt\": \"blurry, low resolution, distorted faces, unnatural anatomy, incorrect object placement, floating objects, misaligned perspective, body parts clipping, unnatural hand positions, warped text, broken reflections, messy background, irrelevant props, dull colors, poor lighting, unrealistic proportions\",\n  \"sections\": [\n    {\n      \"section\": 1,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 0-8 section 1 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 0-8 seconds section 1 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 1, Scene 2 (timestamp 0–8). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 0-8 seconds section 1 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 2,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 0-8 section 2 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 0-8 seconds section 2 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 2, Scene 2 (timestamp 0–8). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 0-8 seconds section 2 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 3,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 0-8 section 3 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 0-8 seconds section 3 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 3, Scene 2 (timestamp 0–8). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 0-8 seconds section 3 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 4,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 0-8 section 4 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 0-8 seconds section 4 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 4, Scene 2 (timestamp 0–8). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 0-8 seconds section 4 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    }\n  ]\n}\n\nAlways return only a well-formed and complete JSON object that includes all of the following fields:\n- title (string)\n- character_reference (string)\n- negative_prompt (string)\n- sections (array of objects)\n  - section (integer)\n  - total_duration (integer, in seconds)\n  - scenes (array of objects)\n    - scene_number (integer)\n    - scene_duration (integer, in seconds)\n    - description (string)\n    - style (string)\n    - camera (string)\n    - lighting (string)\n    - room (string)\n    - elements (array of 6 strings)\n    - motion (string)\n    - action (string)\n    - focus_object (string)\n    - emotion (string)\n    - ending (string)\n    - script (string)\n    - keywords (array of 10 strings)\n    - voice (string)\n    - tone (string)\n    - soundtrack (string)\n    - facial_description (object)\n      - overall_face_shape (string)\n      - eyes (string)\n      - eyebrows (string)\n      - nose (string)\n      - mouth (string)\n      - skin_tone (string)\n      - hairline (string)\n      - nationality (string)\n\n\nThe output must:\n- Be valid JSON (Replace all placeholder text with actual content(No arkdown, no comments, no extra formatting).If information is unavailable, use an empty string)\n- Fill every field with meaningful and coherent values that match the description\n- Ensure all script fields are spoken in fluent and natural language.\n- Maintain consistency of tone, subject, environment, and style\n- Return only the final JSON object with no explanation or prefix",
              "required": true
            },
            {
              "name": "=8-16",
              "description": "=Extract information from 8–16 seconds and create a JSON Object Prompt in the following format. \n\nThe video is a single continuous sequence. In this segment, you must:\n- Maintain the same \"character_reference\" and \"facial_description\" attributes as in previous segments (0–8 seconds), unless the narrative requires a visible change.\n- Reinforce the same environment, camera angles, lighting tone, and emotional atmosphere.\n- Describe the main subject again fully (do not use vague phrases).\n- Ensure the emotional and visual tone feels like a conclusion or natural transition, possibly showing closure, reflection, or shift in pace.\n- Describe only what is visually seen during the 8–16 second timeframe, assuming that the subject and setting are consistent with the previous segments.\n\nReplace only the \"description\" field with the input extracted from that timeframe. All other fields must be filled creatively and appropriately based on the description and consistent with it.\n\nReturn only the JSON object in this exact format:\n{\n  \"title\": \"\",\n  \"character_reference\": \"\",\n  \"negative_prompt\": \"blurry, low resolution, distorted faces, unnatural anatomy, incorrect object placement, floating objects, misaligned perspective, body parts clipping, unnatural hand positions, warped text, broken reflections, messy background, irrelevant props, dull colors, poor lighting, unrealistic proportions\",\n  \"sections\": [\n    {\n      \"section\": 1,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 8-16 section 1 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 8-16 seconds section 1 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 1, Scene 2 (timestamp 8–16). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 8-16 seconds section 1 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 2,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 8-16 section 2 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 8-16 seconds section 2 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 2, Scene 2 (timestamp 8–16). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 8-16 seconds section 2 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 3,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 8-16 section 3 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 8-16 seconds section 3 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 3, Scene 2 (timestamp 8–16). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 8-16 seconds section 3 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 4,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 8-16 section 4 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 8-16 seconds section 4 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 4, Scene 2 (timestamp 8–16). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 8-16 seconds section 4 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    }\n  ]\n}\n\nAlways return only a well-formed and complete JSON object that includes all of the following fields:\n- title (string)\n- character_reference (string)\n- negative_prompt (string)\n- sections (array of objects)\n  - section (integer)\n  - total_duration (integer, in seconds)\n  - scenes (array of objects)\n    - scene_number (integer)\n    - scene_duration (integer, in seconds)\n    - description (string)\n    - style (string)\n    - camera (string)\n    - lighting (string)\n    - room (string)\n    - elements (array of 6 strings)\n    - motion (string)\n    - action (string)\n    - focus_object (string)\n    - emotion (string)\n    - ending (string)\n    - script (string)\n    - keywords (array of 10 strings)\n    - voice (string)\n    - tone (string)\n    - soundtrack (string)\n    - facial_description (object)\n      - overall_face_shape (string)\n      - eyes (string)\n      - eyebrows (string)\n      - nose (string)\n      - mouth (string)\n      - skin_tone (string)\n      - hairline (string)\n      - nationality (string)\n\n\nThe output must:\n- Be valid JSON (Replace all placeholder text with actual content(No arkdown, no comments, no extra formatting).If information is unavailable, use an empty string)\n- Fill every field with meaningful and coherent values that match the description\n- Ensure all script fields are spoken in fluent and natural language.\n- Maintain consistency of tone, subject, environment, and style\n- Return only the final JSON object with no explanation or prefix",
              "required": true
            },
            {
              "name": "=16-24",
              "description": "=Extract information from 16–24 seconds and create a JSON Object Prompt in the following format. \n\nThe video is a single continuous sequence. In this segment, you must:\n- Maintain the same \"character_reference\" and \"facial_description\" attributes as in two previous segments (0–8 seconds, 8–16 seconds), unless the narrative requires a visible change.\n- Reinforce the same environment, camera angles, lighting tone, and emotional atmosphere.\n- Describe the main subject again fully (do not use vague phrases).\n- Ensure the emotional and visual tone feels like a conclusion or natural transition, possibly showing closure, reflection, or shift in pace.\n- Describe only what is visually seen during the 16–24 second timeframe, assuming that the subject and setting are consistent with the previous segments.\n\nReplace only the \"description\" field with the input extracted from that timeframe. All other fields must be filled creatively and appropriately based on the description and consistent with it.\n\nReturn only the JSON object in this exact format:\n{\n  \"title\": \"\",\n  \"character_reference\": \"\",\n  \"negative_prompt\": \"blurry, low resolution, distorted faces, unnatural anatomy, incorrect object placement, floating objects, misaligned perspective, body parts clipping, unnatural hand positions, warped text, broken reflections, messy background, irrelevant props, dull colors, poor lighting, unrealistic proportions\",\n  \"sections\": [\n    {\n      \"section\": 1,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 16-24 section 1 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 16-24 seconds section 1 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 1, Scene 2 (timestamp 16–24). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 16-24 seconds section 1 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 2,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 16-24 section 2 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 16-24 seconds section 2 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 2, Scene 2 (timestamp 16–24). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 16-24 seconds section 2 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 3,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 16-24 section 3 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 16-24 seconds section 3 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 3, Scene 2 (timestamp 16–24). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 16-24 seconds section 3 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 4,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 16-24 section 4 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 16-24 seconds section 4 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 4, Scene 2 (timestamp 16–24). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 16-24 seconds section 4 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    }\n  ]\n}\n\nAlways return only a well-formed and complete JSON object that includes all of the following fields:\n- title (string)\n- character_reference (string)\n- negative_prompt (string)\n- sections (array of objects)\n  - section (integer)\n  - total_duration (integer, in seconds)\n  - scenes (array of objects)\n    - scene_number (integer)\n    - scene_duration (integer, in seconds)\n    - description (string)\n    - style (string)\n    - camera (string)\n    - lighting (string)\n    - room (string)\n    - elements (array of 6 strings)\n    - motion (string)\n    - action (string)\n    - focus_object (string)\n    - emotion (string)\n    - ending (string)\n    - script (string)\n    - keywords (array of 10 strings)\n    - voice (string)\n    - tone (string)\n    - soundtrack (string)\n    - facial_description (object)\n      - overall_face_shape (string)\n      - eyes (string)\n      - eyebrows (string)\n      - nose (string)\n      - mouth (string)\n      - skin_tone (string)\n      - hairline (string)\n      - nationality (string)\n\n\nThe output must:\n- Be valid JSON (Replace all placeholder text with actual content(No arkdown, no comments, no extra formatting).If information is unavailable, use an empty string)\n- Fill every field with meaningful and coherent values that match the description\n- Ensure all script fields are spoken in fluent and natural language.\n- Maintain consistency of tone, subject, environment, and style\n- Return only the final JSON object with no explanation or prefix",
              "required": true
            },
            {
              "name": "=24-32",
              "description": "=Extract information from 24–32 seconds and create a JSON Object Prompt in the following format. \n\nThe video is a single continuous sequence. In this segment, you must:\n- Maintain the same \"character_reference\" and \"facial_description\" attributes as in three previous segments (0–8 seconds, 8–16 seconds and 16-24 seconds), unless the narrative requires a visible change.\n- Reinforce the same environment, camera angles, lighting tone, and emotional atmosphere.\n- Describe the main subject again fully (do not use vague phrases).\n- Ensure the emotional and visual tone feels like a conclusion or natural transition, possibly showing closure, reflection, or shift in pace.\n- Describe only what is visually seen during the 24–32 second timeframe, assuming that the subject and setting are consistent with the previous segments.\n\nReplace only the \"description\" field with the input extracted from that timeframe. All other fields must be filled creatively and appropriately based on the description and consistent with it.\n\nReturn only the JSON object in this exact format:\n{\n  \"title\": \"\",\n  \"character_reference\": \"\",\n  \"negative_prompt\": \"blurry, low resolution, distorted faces, unnatural anatomy, incorrect object placement, floating objects, misaligned perspective, body parts clipping, unnatural hand positions, warped text, broken reflections, messy background, irrelevant props, dull colors, poor lighting, unrealistic proportions\",\n  \"sections\": [\n    {\n      \"section\": 1,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 24-32 section 1 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 24-32 seconds section 1 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 1, Scene 2 (timestamp 24–32). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 24-32 seconds section 1 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 2,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 24-32 section 2 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 24-32 seconds section 2 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 2, Scene 2 (timestamp 24–32). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 24-32 seconds section 2 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 3,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 24-32 section 3 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 24-32 seconds section 3 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 3, Scene 2 (timestamp 24–32). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 24-32 seconds section 3 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    },\n    {\n      \"section\": 4,\n      \"total_duration\": 8,\n      \"scenes\": [\n        {\n          \"scene_number\": 1,\n          \"scene_duration\": (Extract duration information in 24-32 section 4 scene number 1 in seconds. Scene durations should be derived from actual visual/audio cues or provided timestamps. If unavailable, estimate based on changes in setting, action, or camera cuts.),\n          \"description\": \"(from Extracted information 24-32 seconds section 4 scene 1, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        },\n        {\n          \"scene_number\": 2,\n          \"scene_duration\": (Extract the scene duration (in seconds) for Section 4, Scene 2 (timestamp 24–32). Each scene duration must be between 1–8 seconds, and the total of all scene durations in the section must exactly match 'total_duration'. Use actual visual or audio cues, or provided timestamps; if unavailable, estimate based on setting changes, actions, or camera cuts.),\n          \"description\": \"(from Extracted information 24-32 seconds section 4 scene 2, with subject and environment fully reintroduced)\",\n          \"style\": \"\",\n          \"camera\": \"\",\n          \"lighting\": \"\",\n          \"room\": \"\",\n          \"elements\": [\"\", \"\", \"\", \"\", \"\", \"\"],\n          \"motion\": \"\",\n          \"action\": \"\",\n          \"focus_object\": \"\",\n          \"emotion\": \"\",\n          \"ending\": \"\",\n          \"script\": \"\",\n          \"keywords\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n          \"voice\": \"\",\n          \"tone\": \"\",\n          \"soundtrack\": \"\",\n          \"facial_description\": {\n            \"overall_face_shape\": \"\",\n            \"eyes\": \"\",\n            \"eyebrows\": \"\",\n            \"nose\": \"\",\n            \"mouth\": \"\",\n            \"skin_tone\": \"\",\n            \"hairline\": \"\",\n            \"nationality\": \"Indonesian\"\n          }\n        }\n      ]\n    }\n  ]\n}\n\nAlways return only a well-formed and complete JSON object that includes all of the following fields:\n- title (string)\n- character_reference (string)\n- negative_prompt (string)\n- sections (array of objects)\n  - section (integer)\n  - total_duration (integer, in seconds)\n  - scenes (array of objects)\n    - scene_number (integer)\n    - scene_duration (integer, in seconds)\n    - description (string)\n    - style (string)\n    - camera (string)\n    - lighting (string)\n    - room (string)\n    - elements (array of 6 strings)\n    - motion (string)\n    - action (string)\n    - focus_object (string)\n    - emotion (string)\n    - ending (string)\n    - script (string)\n    - keywords (array of 10 strings)\n    - voice (string)\n    - tone (string)\n    - soundtrack (string)\n    - facial_description (object)\n      - overall_face_shape (string)\n      - eyes (string)\n      - eyebrows (string)\n      - nose (string)\n      - mouth (string)\n      - skin_tone (string)\n      - hairline (string)\n      - nationality (string)\n\n\nThe output must:\n- Be valid JSON (Replace all placeholder text with actual content(No arkdown, no comments, no extra formatting).If information is unavailable, use an empty string)\n- Fill every field with meaningful and coherent values that match the description\n- Ensure all script fields are spoken in fluent and natural language.\n- Maintain consistency of tone, subject, environment, and style\n- Return only the final JSON object with no explanation or prefix",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        688,
        1504
      ],
      "id": "763a20b2-546b-4b75-a26e-b6303b503d2e",
      "name": "Video Information Extractor",
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "jsCode": "// Ambil TEXT_PROMPT_PART_1 dari input atau node fallback\nconst rawJson = $input.first().json.TEXT_PROMPT_PART_2 || $('Final Video Prompt').first().json.TEXT_PROMPT_PART_2;\n\n// Langsung parse (jika gagal, akan error otomatis)\nconst promptData = JSON.parse(rawJson);\n\n// Gabungkan jadi satu kalimat prompt\nconst prompt = `\nTitle: ${promptData.title}\nCharacter Reference: ${promptData.character_reference}\nNegative Prompt: ${promptData.negative_prompt}\n${promptData.sections.map(section => `\nSection ${section.section} (Total Duration: ${section.total_duration}s):\n${section.scenes.map(scene => `\n  Scene ${scene.scene_number} (Duration: ${scene.scene_duration}s)\n  Description: ${scene.description}\n  Style: ${scene.style}\n  Camera: ${scene.camera}\n  Lighting: ${scene.lighting}\n  Room/Environment: ${scene.room}\n  Elements: ${scene.elements.join(', ')}\n  Motion: ${scene.motion}\n  Action: ${scene.action}\n  Focus Object: ${scene.focus_object}\n  Emotion: ${scene.emotion}\n  Ending: ${scene.ending}\n  Script: ${scene.script}\n  Voice: ${scene.voice}\n  Tone: ${scene.tone}\n  Soundtrack: ${scene.soundtrack}\n  Facial Details:\n    - Overall Face Shape: ${scene.facial_description.overall_face_shape}\n    - Eyes: ${scene.facial_description.eyes}\n    - Eyebrows: ${scene.facial_description.eyebrows}\n    - Nose: ${scene.facial_description.nose}\n    - Mouth: ${scene.facial_description.mouth}\n    - Skin Tone: ${scene.facial_description.skin_tone}\n    - Hairline: ${scene.facial_description.hairline}\n    - Nationality: ${scene.facial_description.nationality}\n  Keywords: ${scene.keywords.join(', ')}\n`).join('\\n')}\n`).join('\\n')}\n`.trim();\n\n// Return JSON siap untuk HTTP Request\nreturn [\n  {\n    json: {\n      instances: [\n        {\n          prompt: prompt\n        }\n      ],\n      parameters: {\n        aspectRatio: \"16:9\",\n        sampleCount: 1,\n        durationSeconds: \"8\",\n        personGeneration: \"allow_all\",\n        addWatermark: true,\n        includeRaiReason: true,\n        generateAudio: true,\n        resolution: \"720p\"\n      }\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -992,
        1952
      ],
      "id": "f23e67e7-4400-41d3-a85c-e4fb63013d56",
      "name": "Part 2"
    },
    {
      "parameters": {
        "jsCode": "// Ambil TEXT_PROMPT_PART_1 dari input atau node fallback\nconst rawJson = $input.first().json.TEXT_PROMPT_PART_3 || $('Final Video Prompt').first().json.TEXT_PROMPT_PART_3;\n\n// Langsung parse (jika gagal, akan error otomatis)\nconst promptData = JSON.parse(rawJson);\n\n// Gabungkan jadi satu kalimat prompt\nconst prompt = `\nTitle: ${promptData.title}\nCharacter Reference: ${promptData.character_reference}\nNegative Prompt: ${promptData.negative_prompt}\n${promptData.sections.map(section => `\nSection ${section.section} (Total Duration: ${section.total_duration}s):\n${section.scenes.map(scene => `\n  Scene ${scene.scene_number} (Duration: ${scene.scene_duration}s)\n  Description: ${scene.description}\n  Style: ${scene.style}\n  Camera: ${scene.camera}\n  Lighting: ${scene.lighting}\n  Room/Environment: ${scene.room}\n  Elements: ${scene.elements.join(', ')}\n  Motion: ${scene.motion}\n  Action: ${scene.action}\n  Focus Object: ${scene.focus_object}\n  Emotion: ${scene.emotion}\n  Ending: ${scene.ending}\n  Script: ${scene.script}\n  Voice: ${scene.voice}\n  Tone: ${scene.tone}\n  Soundtrack: ${scene.soundtrack}\n  Facial Details:\n    - Overall Face Shape: ${scene.facial_description.overall_face_shape}\n    - Eyes: ${scene.facial_description.eyes}\n    - Eyebrows: ${scene.facial_description.eyebrows}\n    - Nose: ${scene.facial_description.nose}\n    - Mouth: ${scene.facial_description.mouth}\n    - Skin Tone: ${scene.facial_description.skin_tone}\n    - Hairline: ${scene.facial_description.hairline}\n    - Nationality: ${scene.facial_description.nationality}\n  Keywords: ${scene.keywords.join(', ')}\n`).join('\\n')}\n`).join('\\n')}\n`.trim();\n\n// Return JSON siap untuk HTTP Request\nreturn [\n  {\n    json: {\n      instances: [\n        {\n          prompt: prompt\n        }\n      ],\n      parameters: {\n        aspectRatio: \"16:9\",\n        sampleCount: 1,\n        durationSeconds: \"8\",\n        personGeneration: \"allow_all\",\n        addWatermark: true,\n        includeRaiReason: true,\n        generateAudio: true,\n        resolution: \"720p\"\n      }\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -992,
        2080
      ],
      "id": "95b92f84-0f73-4ca8-a6d4-5371f4793898",
      "name": "Part 3"
    },
    {
      "parameters": {
        "jsCode": "// Ambil TEXT_PROMPT_PART_1 dari input atau node fallback\nconst rawJson = $input.first().json.TEXT_PROMPT_PART_4 || $('Final Video Prompt').first().json.TEXT_PROMPT_PART_4;\n\n// Langsung parse (jika gagal, akan error otomatis)\nconst promptData = JSON.parse(rawJson);\n\n// Gabungkan jadi satu kalimat prompt\nconst prompt = `\nTitle: ${promptData.title}\nCharacter Reference: ${promptData.character_reference}\nNegative Prompt: ${promptData.negative_prompt}\n${promptData.sections.map(section => `\nSection ${section.section} (Total Duration: ${section.total_duration}s):\n${section.scenes.map(scene => `\n  Scene ${scene.scene_number} (Duration: ${scene.scene_duration}s)\n  Description: ${scene.description}\n  Style: ${scene.style}\n  Camera: ${scene.camera}\n  Lighting: ${scene.lighting}\n  Room/Environment: ${scene.room}\n  Elements: ${scene.elements.join(', ')}\n  Motion: ${scene.motion}\n  Action: ${scene.action}\n  Focus Object: ${scene.focus_object}\n  Emotion: ${scene.emotion}\n  Ending: ${scene.ending}\n  Script: ${scene.script}\n  Voice: ${scene.voice}\n  Tone: ${scene.tone}\n  Soundtrack: ${scene.soundtrack}\n  Facial Details:\n    - Overall Face Shape: ${scene.facial_description.overall_face_shape}\n    - Eyes: ${scene.facial_description.eyes}\n    - Eyebrows: ${scene.facial_description.eyebrows}\n    - Nose: ${scene.facial_description.nose}\n    - Mouth: ${scene.facial_description.mouth}\n    - Skin Tone: ${scene.facial_description.skin_tone}\n    - Hairline: ${scene.facial_description.hairline}\n    - Nationality: ${scene.facial_description.nationality}\n  Keywords: ${scene.keywords.join(', ')}\n`).join('\\n')}\n`).join('\\n')}\n`.trim();\n\n// Return JSON siap untuk HTTP Request\nreturn [\n  {\n    json: {\n      instances: [\n        {\n          prompt: prompt\n        }\n      ],\n      parameters: {\n        aspectRatio: \"16:9\",\n        sampleCount: 1,\n        durationSeconds: \"8\",\n        personGeneration: \"allow_all\",\n        addWatermark: true,\n        includeRaiReason: true,\n        generateAudio: true,\n        resolution: \"720p\"\n      }\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -992,
        2208
      ],
      "id": "b0221028-3577-4aa4-b835-1e3951b3c806",
      "name": "Part 4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Final Video Prompt').item.json.API_ENDPOINT }}/v1/projects/{{ $('Final Video Prompt').item.json.PROJECT_ID }}/locations/{{ $('Final Video Prompt').item.json.LOCATION }}/publishers/google/models/{{ $('Final Video Prompt').item.json.MODEL_VERSION }}:predictLongRunning",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $node[\"Part 1\"].json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -816,
        1824
      ],
      "id": "b2bb61c2-3ae8-4627-8c1f-32250e68d030",
      "name": "Vertex AI-VEO Part 1",
      "credentials": {
        "googleApi": {
          "id": "79QKevELDmOjyfIv",
          "name": "VertexAI Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Final Video Prompt').item.json.API_ENDPOINT }}/v1/projects/{{ $('Final Video Prompt').item.json.PROJECT_ID }}/locations/{{ $('Final Video Prompt').item.json.LOCATION }}/publishers/google/models/{{ $('Final Video Prompt').item.json.MODEL_VERSION }}:predictLongRunning",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $node[\"Part 2\"].json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -816,
        1952
      ],
      "id": "e3286887-dfb3-403a-b773-b58d84a29112",
      "name": "Vertex AI-VEO1 Part 2",
      "credentials": {
        "googleApi": {
          "id": "79QKevELDmOjyfIv",
          "name": "VertexAI Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Final Video Prompt').item.json.API_ENDPOINT }}/v1/projects/{{ $('Final Video Prompt').item.json.PROJECT_ID }}/locations/{{ $('Final Video Prompt').item.json.LOCATION }}/publishers/google/models/{{ $('Final Video Prompt').item.json.MODEL_VERSION }}:predictLongRunning",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $node[\"Part 3\"].json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -816,
        2080
      ],
      "id": "f3b95ffe-637f-4b83-96b3-c18c1cdb4e35",
      "name": "Vertex AI-VEO Part 3",
      "credentials": {
        "googleApi": {
          "id": "79QKevELDmOjyfIv",
          "name": "VertexAI Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Final Video Prompt').item.json.API_ENDPOINT }}/v1/projects/{{ $('Final Video Prompt').item.json.PROJECT_ID }}/locations/{{ $('Final Video Prompt').item.json.LOCATION }}/publishers/google/models/{{ $('Final Video Prompt').item.json.MODEL_VERSION }}:predictLongRunning",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $node[\"Part 4\"].json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -816,
        2208
      ],
      "id": "b08d547f-8797-4ace-8d10-16bd485666f0",
      "name": "Vertex AI-VEO Part 4",
      "credentials": {
        "googleApi": {
          "id": "79QKevELDmOjyfIv",
          "name": "VertexAI Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Final Video Prompt').item.json.API_ENDPOINT }}/v1/projects/{{ $('Final Video Prompt').item.json.PROJECT_ID }}/locations/{{ $('Final Video Prompt').item.json.LOCATION }}/publishers/google/models/{{ $('Final Video Prompt').item.json.MODEL_VERSION }}:fetchPredictOperation",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"operationName\": \"{{ $json.name }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        1824
      ],
      "id": "5d218379-1e9b-4f2a-919e-b00e77a2fe4e",
      "name": "Vertex AI-fetch Video 1",
      "credentials": {
        "googleApi": {
          "id": "79QKevELDmOjyfIv",
          "name": "VertexAI Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Final Video Prompt').item.json.API_ENDPOINT }}/v1/projects/{{ $('Final Video Prompt').item.json.PROJECT_ID }}/locations/{{ $('Final Video Prompt').item.json.LOCATION }}/publishers/google/models/{{ $('Final Video Prompt').item.json.MODEL_VERSION }}:fetchPredictOperation",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"operationName\": \"{{ $json.name }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        1952
      ],
      "id": "a2083d9b-ff91-4e7a-af3c-12555160ae99",
      "name": "Vertex AI-fetch Video 2",
      "credentials": {
        "googleApi": {
          "id": "79QKevELDmOjyfIv",
          "name": "VertexAI Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Final Video Prompt').item.json.API_ENDPOINT }}/v1/projects/{{ $('Final Video Prompt').item.json.PROJECT_ID }}/locations/{{ $('Final Video Prompt').item.json.LOCATION }}/publishers/google/models/{{ $('Final Video Prompt').item.json.MODEL_VERSION }}:fetchPredictOperation",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"operationName\": \"{{ $json.name }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        2080
      ],
      "id": "070f5b71-1b05-41b8-a616-6d33c61c4ecd",
      "name": "Vertex AI-fetch Video 3",
      "credentials": {
        "googleApi": {
          "id": "79QKevELDmOjyfIv",
          "name": "VertexAI Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $('Final Video Prompt').item.json.API_ENDPOINT }}/v1/projects/{{ $('Final Video Prompt').item.json.PROJECT_ID }}/locations/{{ $('Final Video Prompt').item.json.LOCATION }}/publishers/google/models/{{ $('Final Video Prompt').item.json.MODEL_VERSION }}:fetchPredictOperation",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"operationName\": \"{{ $json.name }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        2208
      ],
      "id": "c2d06ea1-902b-44e7-8ef5-2000c16cf4b4",
      "name": "Vertex AI-fetch Video 4",
      "credentials": {
        "googleApi": {
          "id": "79QKevELDmOjyfIv",
          "name": "VertexAI Google Service Account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        128,
        2000
      ],
      "id": "e61b7790-3de2-4029-afd1-40484a99efcb",
      "name": "Merge1"
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -640,
        1952
      ],
      "id": "dbc45826-11a3-470d-aac1-aad9dda28bcb",
      "name": "Wait1",
      "webhookId": "46a5805a-a941-490b-9b1c-a1b2ac0ad9ee"
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -640,
        2080
      ],
      "id": "2d1be610-7462-4f2d-862e-89ee2996336e",
      "name": "Wait2",
      "webhookId": "46a5805a-a941-490b-9b1c-a1b2ac0ad9ee"
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -640,
        2208
      ],
      "id": "1e0558b0-5eb7-41a1-8405-fc7ced38bef3",
      "name": "Wait3",
      "webhookId": "46a5805a-a941-490b-9b1c-a1b2ac0ad9ee"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "=response.videos[0].bytesBase64Encoded",
        "options": {
          "fileName": "1"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -304,
        1824
      ],
      "id": "b73ebad0-4053-49d5-b910-586ff9840824",
      "name": "Convert to File4"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "=response.videos[0].bytesBase64Encoded",
        "options": {
          "fileName": "2"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -304,
        1952
      ],
      "id": "2a824929-cc9b-4bca-b15b-b4c2d6876ad5",
      "name": "Convert to File5"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "response.videos[0].bytesBase64Encoded",
        "options": {
          "fileName": "3"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -304,
        2080
      ],
      "id": "66676b5f-838a-4099-a3ff-c24f712d57b1",
      "name": "Convert to File6"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "response.videos[0].bytesBase64Encoded",
        "options": {
          "fileName": "4"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -304,
        2208
      ],
      "id": "fb49b770-2048-4177-b254-e865186b2143",
      "name": "Convert to File7"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        720,
        704
      ],
      "id": "8d0b365c-5c79-47f4-ad94-b51f59b07fff",
      "name": "SerpAPI",
      "credentials": {
        "serpApi": {
          "id": "2Rphk6PvbACgV2vh",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const fileCount = items.length;\nconst fileNames = [];\n\nfor (let i = 1; i <= fileCount; i++) {\n  fileNames.push(`${i}.mp4`);\n}\n\nreturn [\n  {\n    json: {\n      fileNameList: fileNames\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        1872
      ],
      "id": "6dfc3806-710c-4957-a587-9ba3604141fb",
      "name": "Code1"
    },
    {
      "parameters": {
        "fileSelector": "=/home/node/.n8n/output.wav",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1328,
        1872
      ],
      "id": "a78fcae8-9754-48f9-a688-29ffc0c2bcad",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        752,
        1872
      ],
      "id": "d242e3a4-8c9c-4eab-bfd7-c6c67445fb2a",
      "name": "Wait5",
      "webhookId": "0b720c17-d8fb-40ee-8dc2-e5540d9daf4f"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/home/node/.n8n/1.mp4",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -144,
        1824
      ],
      "id": "88fb9652-4d56-41a8-8030-b3de113da315",
      "name": "Read/Write Files from Disk6"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/home/node/.n8n/2.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -144,
        1952
      ],
      "id": "e4193779-f3f4-4034-a71b-9a4137fe3608",
      "name": "Read/Write Files from Disk7"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/home/node/.n8n/3.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -144,
        2080
      ],
      "id": "eb8e7bfc-ccd4-484d-8b89-a9a33282ffb1",
      "name": "Read/Write Files from Disk8"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/home/node/.n8n/4.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -144,
        2208
      ],
      "id": "f3dd97c5-14ef-4343-ae2a-3dcc41e2fb4e",
      "name": "Read/Write Files from Disk9"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": {{ $env.WHATSAPP_PHONE_NUMBER_ID }},
        "recipientPhoneNumber": "={{ $('WhatsApp Input').first().json.messages[0].from }}",
        "messageType": "video",
        "mediaPath": "useMedian8n",
        "additionalFields": {
          "mediaCaption": "={{ $('Video Agent').first().json.output }}"
        }
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1584,
        2320
      ],
      "id": "9b976ba4-91f9-47cc-b7bf-529e4dbf0400",
      "name": "Video Responses",
      "webhookId": "a9344afc-e576-4a15-b0a9-c11e4058f3f2",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {
          "messageStatusUpdates": [
            "all"
          ]
        }
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        -2224,
        912
      ],
      "id": "5f7de2d8-4b1f-426b-85ac-7568c308fe59",
      "name": "WhatsApp Input",
      "webhookId": "236078fd-256f-4232-934c-0e0caec8777a",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "HORTuuLZMPgqyGyx",
          "name": "WhatsApp OAuth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let textSources = [];\n\ntry {\n  textSources.push($json.Text);\n} catch (_) {}\n\ntry {\n  const textPrompt = $items(\"Text Prompt\");\n  if (textPrompt.length > 0 && textPrompt[0].json?.Text) {\n    textSources.push(textPrompt[0].json.Text);\n  }\n} catch (_) {}\n\ntry {\n  const imagePrompt = $items(\"Image Text Prompt\");\n  if (imagePrompt.length > 0 && imagePrompt[0].json?.Text) {\n    textSources.push(imagePrompt[0].json.Text);\n  }\n} catch (_) {}\n\ntry {\n  const videoPrompt = $items(\"Video Text Prompt\");\n  if (videoPrompt.length > 0 && videoPrompt[0].json?.Text) {\n    textSources.push(videoPrompt[0].json.Text);\n  }\n} catch (_) {}\n\nconst result = textSources.find(text => !!text);\n\nreturn [{ json: { Text: result } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        512
      ],
      "id": "59ecb306-42f1-4404-8fec-69a080579440",
      "name": "All Prompt Function Code"
    },
    {
      "parameters": {
        "jsCode": "// Ambil TEXT_PROMPT_PART_1 dari input atau node fallback\nconst rawJson = $input.first().json.TEXT_PROMPT_PART_1 || $('Final Video Prompt').first().json.TEXT_PROMPT_PART_1;\n\n// Langsung parse (jika gagal, akan error otomatis)\nconst promptData = JSON.parse(rawJson);\n\n// Gabungkan jadi satu kalimat prompt\nconst prompt = `\nTitle: ${promptData.title}\nCharacter Reference: ${promptData.character_reference}\nNegative Prompt: ${promptData.negative_prompt}\n${promptData.sections.map(section => `\nSection ${section.section} (Total Duration: ${section.total_duration}s):\n${section.scenes.map(scene => `\n  Scene ${scene.scene_number} (Duration: ${scene.scene_duration}s)\n  Description: ${scene.description}\n  Style: ${scene.style}\n  Camera: ${scene.camera}\n  Lighting: ${scene.lighting}\n  Room/Environment: ${scene.room}\n  Elements: ${scene.elements.join(', ')}\n  Motion: ${scene.motion}\n  Action: ${scene.action}\n  Focus Object: ${scene.focus_object}\n  Emotion: ${scene.emotion}\n  Ending: ${scene.ending}\n  Script: ${scene.script}\n  Voice: ${scene.voice}\n  Tone: ${scene.tone}\n  Soundtrack: ${scene.soundtrack}\n  Facial Details:\n    - Overall Face Shape: ${scene.facial_description.overall_face_shape}\n    - Eyes: ${scene.facial_description.eyes}\n    - Eyebrows: ${scene.facial_description.eyebrows}\n    - Nose: ${scene.facial_description.nose}\n    - Mouth: ${scene.facial_description.mouth}\n    - Skin Tone: ${scene.facial_description.skin_tone}\n    - Hairline: ${scene.facial_description.hairline}\n    - Nationality: ${scene.facial_description.nationality}\n  Keywords: ${scene.keywords.join(', ')}\n`).join('\\n')}\n`).join('\\n')}\n`.trim();\n\n// Return JSON siap untuk HTTP Request\nreturn [\n  {\n    json: {\n      instances: [\n        {\n          prompt: prompt\n        }\n      ],\n      parameters: {\n        aspectRatio: \"16:9\",\n        sampleCount: 1,\n        durationSeconds: \"8\",\n        personGeneration: \"allow_all\",\n        addWatermark: true,\n        includeRaiReason: true,\n        generateAudio: true,\n        resolution: \"720p\"\n      }\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -992,
        1824
      ],
      "id": "b882d6fc-b779-4ac4-b8b1-d87260a5fd6d",
      "name": "Part 1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "16ce9862-3caf-45e9-a451-90bbcfcff116",
                    "leftValue": "={{ $json.isGenerateIntent === false && $json.isVideoGenerateIntent === false }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Generate Text Requests"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.isGenerateIntent === true && $json.isVideoGenerateIntent === false }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    },
                    "id": "bfa7507d-ea23-4037-a83a-274885f5a81f"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Generate Image Requests"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cc0e70d8-1fa6-42be-ab61-9d4e471c61e7",
                    "leftValue": "={{ $json.isGenerateIntent === false && $json.isVideoGenerateIntent === true }}",
                    "rightValue": true,
                    "operator": {
                      "type": "boolean",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Generate Video Requests"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -208,
        736
      ],
      "id": "0e73907c-4ba6-499e-b506-1e723f72ef68",
      "name": "Switch Text, Images or Video1"
    },
    {
      "parameters": {
        "jsCode": "let textSources = [];\n\ntry {\n  const textPrompt = $items(\"Text Prompt\");\n  if (textPrompt.length > 0 && textPrompt[0].json?.Text) {\n    textSources.push(textPrompt[0].json.Text);\n  }\n} catch (_) {}\n\ntry {\n  const imagePrompt = $items(\"Image Text Prompt\");\n  if (imagePrompt.length > 0 && imagePrompt[0].json?.Text) {\n    textSources.push(imagePrompt[0].json.Text);\n  }\n} catch (_) {}\n\ntry {\n  const videoPrompt = $items(\"Video Text Prompt\");\n  if (videoPrompt.length > 0 && videoPrompt[0].json?.Text) {\n    textSources.push(videoPrompt[0].json.Text);\n  }\n} catch (_) {}\n\nconst result = textSources.find(text => !!text);\n\nreturn [{ json: { Text: result } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        160,
        1504
      ],
      "id": "c58583b5-1b8c-4166-a362-74315a001cb3",
      "name": "All Prompt Function Code1"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        1232,
        1344
      ],
      "id": "b27f0079-5a38-4959-ad00-2e7e6e34ccbe",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "get_list_of_tables_and_columns",
          "mode": "list",
          "cachedResultName": "get_list_of_tables_and_columns"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1424,
        1344
      ],
      "id": "fc43e919-b415-46cc-b598-2db6c999819d",
      "name": "Select rows from a table",
      "credentials": {
        "postgres": {
          "id": "KeEG8NIjEbXg9xgH",
          "name": "Postgres (Supabase) account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1600,
        1344
      ],
      "id": "42d509cd-07da-4f3f-901b-67fa9d152847",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5c9ca165-9adc-40c1-a0c9-003bc7a8be6a",
              "name": "mappings",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1776,
        1344
      ],
      "id": "ce4d082b-f35b-4d05-bf45-34cb7fc1a32f",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "=<WHATSAPP_PHONE_NUMBER_ID>",
        "recipientPhoneNumber": "={{ $('WhatsApp Input').item.json.messages[0].from }}",
        "textBody": "={{ $json.output || $json.text }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1184,
        1120
      ],
      "id": "a7fd808f-401d-400b-8e5e-4c1720a1b808",
      "name": "Send message",
      "webhookId": "a0d4b3ed-8b72-48e9-83a6-f762f706346c",
      "credentials": {
        "whatsAppApi": {
          "id": "ruzXEUeZzr0PzIcy",
          "name": "Whatsapp account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "=GENERAL",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "f34f9061-575e-4f94-a497-5c35580f7fec"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "General"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f7524e95-eb75-4902-9a33-4bdf3e11f435",
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "DATABASE",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -256,
        1152
      ],
      "id": "03850c02-e82e-4ea9-990e-98baef4b0fc0",
      "name": "Switch1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Collect Prompt').first().json.Text }}",
        "options": {
          "systemMessage": "=You are an enterprise assistant helping users access information.\n\nYou are tasked with answering a question using the information within the database.\n\nBefore querying the database, you must call the \"Get tables, schemas, columns, and foreign keys\" tool to identify the most relevant tables and fields.\n\nThe tool above will any foreign key references. You can use these to construct JOIN statements as necessary to reduce the number of SQL commands, you must make sure to follow correct foreign key relationships to retrieve accurate results.\n\nWhen applying WHERE clauses, you should run SELECT DISTINCT queries (LIMIT 100) on the relevant fields first to understand the valid options. This applies even if the user provides a specific value, you must verify that the value exists in the data before using it.\n\nDo NOT run SELECT DISTINCT queries for ID columns.\n\nYour goal is to provide an accurate answer based on this information ONLY. Your aim is to construct a single SQL query to join all of the relevant tables for the required data, unless you require SQL queries to get distinct values.\n\nIf you cannot answer the question using the provided information, or if no information is returned from the database, say that you don't know\n\nImportant :\nAlways respond to every conversation in a friendly communication style and tone using the Indonesian language.\n\nYour responses will be forwarded into the chat, so to keep it clean, do not use any markdown or any text formatting (include *)."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        576,
        1184
      ],
      "id": "38b31c9e-81cc-46db-a4a1-a3b74af67ddc",
      "name": "Database Agent",
      "retryOnFail": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('WhatsApp Input').first().json.messages[0].text.body }}",
        "messages": {
          "messageValues": [
            {
              "message": "=You are the a helpful assistant.\nYour job: respond to user, that user is **not an approved user**,\nreply with a short, clear, and friendly sentence.\n\nMandatory Requirements :\n- Always respond to every conversation in a friendly communication style and tone using the Indonesian language.\n- Your responses will be forwarded into the chat, so to keep it clean, do not use any markdown formatting (just plain text)."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        576,
        1056
      ],
      "id": "f6e51208-4961-4d78-bc8f-2f39566d7734",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('WhatsApp Input').first().json.messages[0].from }}",
        "contextWindowLength": "={{ Number.MAX_SAFE_INTEGER }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        672,
        1360
      ],
      "id": "8e8b509c-b440-44af-a315-3607b2347664",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "KeEG8NIjEbXg9xgH",
          "name": "Postgres (Supabase) account"
        }
      }
    },
    {
      "parameters": {
        "description": "=Call this tool to get available tables and fields",
        "workflowId": {
          "__rl": true,
          "value": "ocOuElwF9L1gPLA4",
          "mode": "list",
          "cachedResultName": "ADAM"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        800,
        1360
      ],
      "id": "8e074718-3192-45c3-a52d-cc0230b0a3cf",
      "name": "Get Available Tables and Fields"
    },
    {
      "parameters": {
        "content": "## Generate Video Content",
        "height": 912,
        "width": 3456
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1696,
        1744
      ],
      "id": "d6e144db-151c-4b4e-821d-60ba6b31cc83",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## RAG Workflow",
        "height": 416,
        "width": 1632,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        336,
        1072
      ],
      "id": "24559987-6d6f-4102-b0d3-c7955469052c",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Generate Image Content",
        "height": 352,
        "width": 944
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        784,
        704
      ],
      "id": "7e221064-fedc-4ad5-a0d3-76fdb3f7643d",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Generate Audio Content",
        "height": 336,
        "width": 768
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        944,
        368
      ],
      "id": "97937a53-2f79-4b4f-aad8-1fbfff015507",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Input Data to worksheet (Upcoming Features)",
        "height": 368,
        "width": 1712,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "9332a194-7a63-438a-bd3b-6d1c353b4aa8",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.Text }}",
        "messages": {
          "messageValues": [
            {
              "message": "=You are an intent classifier.\n\nClassify user requests into exactly one of:\n- \"DATABASE\" → only if the request explicitly asks for business data, numbers, reports, queries, sales, profit, invoices, customers, prices, etc. that require looking into the tables and schemas.\n- \"GENERAL\" → if the request is about explanations, comparisons, definitions, opinions, advice, or anything not explicitly asking for database data.\n\nRules:\n- Do NOT output anything except a valid JSON.\n- Always output one of the two options. Never leave it empty, never output None.\n- If uncertain, default to {\"intent\": \"GENERAL\"}.\n\nOutput format (strict JSON, no extra text):\n{\"intent\": \"DATABASE\"} or {\"intent\": \"GENERAL\"}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -640,
        1152
      ],
      "id": "6dce9019-1cbf-4c6b-b3d6-f491ac35d1da",
      "name": "Prompt Selector",
      "retryOnFail": false
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $fromAI('sql_query') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        960,
        1360
      ],
      "id": "38b15828-c4f3-40b2-9a80-a031941007c8",
      "name": "Execute a SQL query",
      "credentials": {
        "postgres": {
          "id": "KeEG8NIjEbXg9xgH",
          "name": "Postgres (Supabase) account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Creative Process",
        "height": 256,
        "width": 1408,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -112,
        1488
      ],
      "id": "145ac2c7-4e6f-48f9-a274-f9ea4bfefcc0",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      Text: $json.Text \n        || $('WhatsApp Input').first()?.json?.messages?.[0]?.text?.body\n        || $('Image Text Prompt').first()?.json?.Text\n        || $('Audio Prompt').first()?.json?.Text\n        || ''\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -784,
        1152
      ],
      "id": "16a28511-d899-4856-bc38-974b8b156f7b",
      "name": "Collect Prompt"
    },
    {
      "parameters": {
        "command": "=ffmpeg -y -i /home/node/.n8n/output.mp4 \\\n  -ar 44100 -ac 2 -c:a pcm_s16le /home/node/.n8n/output.wav \\\n  -an -c:v copy /home/node/.n8n/output_muted.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1040,
        1872
      ],
      "id": "94347680-ec9b-44be-a60a-a884b1e4655d",
      "name": "Extract Audio"
    },
    {
      "parameters": {
        "command": "=echo -e \"{{ $json.fileNameList.map(name => `file '/home/node/.n8n/${name}'`).join('\\n') }}\" > /home/node/.n8n/list.txt && \\\ncat /home/node/.n8n/list.txt && \\\nffmpeg -y -f concat -safe 0 -i /home/node/.n8n/list.txt -c copy /home/node/.n8n/output.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        608,
        1872
      ],
      "id": "f24fa481-2ab3-40d8-8cf1-068f43195db8",
      "name": "Merge Video",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1184,
        1872
      ],
      "id": "997bf5cd-3539-4207-90a2-5b2ae0ae537d",
      "name": "Wait4",
      "webhookId": "cafa1d78-2378-4a14-9fd8-91747035f472"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5aa1b8b4-1531-4ca4-8a09-b2efa01fafd6",
                    "leftValue": "={{ ![ \"<user number that can access the database>\", \"<user number that can access the database>\", \"<user number that can access the database>\" ].includes($('WhatsApp Input').first().json.messages[0].from) }}",
                    "rightValue": "={{ [<user number that can access the database>, <user number that can access the database>, <user number that can access the database>].includes($('WhatsApp Input').first().json.messages[0].from) }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Decline"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ [ \"<user number that can access the database>\", \"<user number that can access the database>\", \"<user number that can access the database>\" ].includes($('WhatsApp Input').first().json.messages[0].from) }}",
                    "rightValue": "={{ ![<user number that can access the database>, <user number that can access the database>, <user number that can access the database>].includes($('WhatsApp Input').first().json.messages[0].from) }}",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "665ccf27-944a-42e1-bb26-86792b883fb5"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Pass"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        32,
        1168
      ],
      "id": "463a0e29-b956-465e-857f-680add58c866",
      "name": "Authorized User"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        688,
        1664
      ],
      "id": "b8fb589e-7026-4cb0-aca5-2e9f53ee07af",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "zmKSyYEa5jVyzYKI",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5aa1b8b4-1531-4ca4-8a09-b2efa01fafd6",
                    "leftValue": "={{\n(() => {\n  const raw0 = $json?.content?.parts?.[0]?.text ?? '';\n\n  // bersihkan pagar ```json ... ```\n  const raw = String(raw0).replace(/```json|```/gi, '').trim();\n\n  let gender = '';\n  let age = '';\n\n  // parse JSON\n  try {\n    const obj = JSON.parse(raw);\n    gender = String(obj?.gender ?? '').toLowerCase();\n    age    = String(obj?.age_group ?? '').toLowerCase();\n  } catch (e) {\n    // fallback: kalau bukan JSON, pakai regex langsung dari teks\n    const s = String(raw0).toLowerCase();\n    if (/\\b(pria|lelaki|laki(?:-|\\s*)laki|laki|cowok|male|bapak|kakek)\\b/i.test(s)) gender = 'pria';\n    if (/\\b(perempuan|wanita|cewek|female|ibu|nenek)\\b/i.test(s)) gender = 'wanita';\n    if (/\\b(muda|remaja|teen|belia|abg|young)\\b/i.test(s)) age = 'muda';\n    if (!age && /\\b(tua|lansia|senior|elderly|sepuh)\\b/i.test(s)) age = 'tua';\n  }\n\n  // regex final untuk penentuan kategori\n  const isMale   = /\\b(pria|lelaki|laki(?:-|\\s*)laki|laki|cowok|male|bapak|kakek)\\b/i.test(gender);\n  const isFemale = /\\b(perempuan|wanita|cewek|female|ibu|nenek)\\b/i.test(gender);\n  const isYoung  = /\\b(muda|remaja|teen|belia|abg|young)\\b/i.test(age);\n\n  if (isMale && isYoung)  return 'pria muda';\n  if (isMale && !isYoung) return 'pria tua';\n  if (isFemale && isYoung)  return 'wanita muda';\n  if (isFemale && !isYoung) return 'wanita tua';\n\n  return 'tidak terklasifikasi';\n})()\n}}",
                    "rightValue": "=pria tua",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Old Man"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{\n(() => {\n  const raw0 = $json?.content?.parts?.[0]?.text ?? '';\n\n  // bersihkan pagar ```json ... ```\n  const raw = String(raw0).replace(/```json|```/gi, '').trim();\n\n  let gender = '';\n  let age = '';\n\n  // coba parse JSON\n  try {\n    const obj = JSON.parse(raw);\n    gender = String(obj?.gender ?? '').toLowerCase();\n    age    = String(obj?.age_group ?? '').toLowerCase();\n  } catch (e) {\n    // fallback: kalau bukan JSON, pakai regex langsung dari teks\n    const s = String(raw0).toLowerCase();\n    if (/\\b(pria|lelaki|laki(?:-|\\s*)laki|laki|cowok|male|bapak|kakek)\\b/i.test(s)) gender = 'pria';\n    if (/\\b(perempuan|wanita|cewek|female|ibu|nenek)\\b/i.test(s)) gender = 'wanita';\n    if (/\\b(muda|remaja|teen|belia|abg|young)\\b/i.test(s)) age = 'muda';\n    if (!age && /\\b(tua|lansia|senior|elderly|sepuh)\\b/i.test(s)) age = 'tua';\n  }\n\n  // regex final untuk penentuan kategori\n  const isMale   = /\\b(pria|lelaki|laki(?:-|\\s*)laki|laki|cowok|male|bapak|kakek)\\b/i.test(gender);\n  const isFemale = /\\b(perempuan|wanita|cewek|female|ibu|nenek)\\b/i.test(gender);\n  const isYoung  = /\\b(muda|remaja|teen|belia|abg|young)\\b/i.test(age);\n\n  if (isMale && isYoung)  return 'pria muda';\n  if (isMale && !isYoung) return 'pria tua';\n  if (isFemale && isYoung)  return 'wanita muda';\n  if (isFemale && !isYoung) return 'wanita tua';\n\n  return 'tidak terklasifikasi';\n})()\n}}",
                    "rightValue": "=pria muda",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "665ccf27-944a-42e1-bb26-86792b883fb5"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Young Man"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e8ecf06e-2fcf-4baf-ac70-2b948ef32baa",
                    "leftValue": "={{\n(() => {\n  const raw0 = $json?.content?.parts?.[0]?.text ?? '';\n\n  // bersihkan pagar ```json ... ```\n  const raw = String(raw0).replace(/```json|```/gi, '').trim();\n\n  let gender = '';\n  let age = '';\n\n  // coba parse JSON\n  try {\n    const obj = JSON.parse(raw);\n    gender = String(obj?.gender ?? '').toLowerCase();\n    age    = String(obj?.age_group ?? '').toLowerCase();\n  } catch (e) {\n    // fallback: kalau bukan JSON, pakai regex langsung dari teks\n    const s = String(raw0).toLowerCase();\n    if (/\\b(pria|lelaki|laki(?:-|\\s*)laki|laki|cowok|male|bapak|kakek)\\b/i.test(s)) gender = 'pria';\n    if (/\\b(perempuan|wanita|cewek|female|ibu|nenek)\\b/i.test(s)) gender = 'wanita';\n    if (/\\b(muda|remaja|teen|belia|abg|young)\\b/i.test(s)) age = 'muda';\n    if (!age && /\\b(tua|lansia|senior|elderly|sepuh)\\b/i.test(s)) age = 'tua';\n  }\n\n  // regex final untuk penentuan kategori\n  const isMale   = /\\b(pria|lelaki|laki(?:-|\\s*)laki|laki|cowok|male|bapak|kakek)\\b/i.test(gender);\n  const isFemale = /\\b(perempuan|wanita|cewek|female|ibu|nenek)\\b/i.test(gender);\n  const isYoung  = /\\b(muda|remaja|teen|belia|abg|young)\\b/i.test(age);\n\n  if (isMale && isYoung)  return 'pria muda';\n  if (isMale && !isYoung) return 'pria tua';\n  if (isFemale && isYoung)  return 'wanita muda';\n  if (isFemale && !isYoung) return 'wanita tua';\n\n  return 'tidak terklasifikasi';\n})()\n}}",
                    "rightValue": "wanita muda",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Young Girl"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "690c1cf9-683a-4671-9c7d-b4c8b82df977",
                    "leftValue": "={{\n(() => {\n  const raw0 = $json?.content?.parts?.[0]?.text ?? '';\n\n  // bersihkan pagar ```json ... ```\n  const raw = String(raw0).replace(/```json|```/gi, '').trim();\n\n  let gender = '';\n  let age = '';\n\n  // coba parse JSON\n  try {\n    const obj = JSON.parse(raw);\n    gender = String(obj?.gender ?? '').toLowerCase();\n    age    = String(obj?.age_group ?? '').toLowerCase();\n  } catch (e) {\n    // fallback: kalau bukan JSON, pakai regex langsung dari teks\n    const s = String(raw0).toLowerCase();\n    if (/\\b(pria|lelaki|laki(?:-|\\s*)laki|laki|cowok|male|bapak|kakek)\\b/i.test(s)) gender = 'pria';\n    if (/\\b(perempuan|wanita|cewek|female|ibu|nenek)\\b/i.test(s)) gender = 'wanita';\n    if (/\\b(muda|remaja|teen|belia|abg|young)\\b/i.test(s)) age = 'muda';\n    if (!age && /\\b(tua|lansia|senior|elderly|sepuh)\\b/i.test(s)) age = 'tua';\n  }\n\n  // regex final untuk penentuan kategori\n  const isMale   = /\\b(pria|lelaki|laki(?:-|\\s*)laki|laki|cowok|male|bapak|kakek)\\b/i.test(gender);\n  const isFemale = /\\b(perempuan|wanita|cewek|female|ibu|nenek)\\b/i.test(gender);\n  const isYoung  = /\\b(muda|remaja|teen|belia|abg|young)\\b/i.test(age);\n\n  if (isMale && isYoung)  return 'pria muda';\n  if (isMale && !isYoung) return 'pria tua';\n  if (isFemale && isYoung)  return 'wanita muda';\n  if (isFemale && !isYoung) return 'wanita tua';\n\n  return 'tidak terklasifikasi';\n})()\n}}",
                    "rightValue": "wanita tua",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "=Old Woman"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        432,
        2272
      ],
      "id": "b4e48ff7-bd77-454e-93fa-a72a5a29aae4",
      "name": "Identify Character1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/speech-to-speech/NOpBlnGInO9m6vDvFkFC",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "audio",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        736,
        2112
      ],
      "id": "48e2787c-c164-445f-a8e1-9c00550479f4",
      "name": "Old Male Voice Changer",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NGL8VS2GT9oa8sjJ",
          "name": "Elevenlabs API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/speech-to-speech/7NsaqHdLuKNFvEfjpUno",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "audio",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        736,
        2480
      ],
      "id": "c15d6b9e-6b64-4f7d-81fc-7c2e35661e91",
      "name": "Old Woman Voice Changer",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NGL8VS2GT9oa8sjJ",
          "name": "Elevenlabs API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/speech-to-speech/iWydkXKoiVtvdn4vLKp9",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "audio",
              "value": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        736,
        2368
      ],
      "id": "2acad28d-1530-4660-849b-4507281ee39f",
      "name": "Young Lady Voice Changer",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NGL8VS2GT9oa8sjJ",
          "name": "Elevenlabs API"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/home/node/.n8n/output.wav",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        912,
        2320
      ],
      "id": "f3cc21de-b296-4d08-a59b-68207c14f936",
      "name": "Read/Write Files from Disk10"
    },
    {
      "parameters": {
        "command": "=ffmpeg -y -i /home/node/.n8n/output_muted.mp4 \\\n  -i /home/node/.n8n/output.wav \\\n  -c:v copy -c:a aac -b:a 192k \\\n  -shortest /home/node/.n8n/final_output.mp4"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1072,
        2320
      ],
      "id": "25bfcee4-eaec-44c7-b24d-8f4408919a3d",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1232,
        2320
      ],
      "id": "aa6b079c-e4df-4620-876e-8d1b817bde20",
      "name": "Wait6",
      "webhookId": "03e76bd1-921e-407a-9363-b49dcc927a10"
    },
    {
      "parameters": {
        "fileSelector": "=/home/node/.n8n/final_output.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1392,
        2320
      ],
      "id": "b2e1a072-92ed-4aee-b7b3-fe9255e5d53e",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "fileSelector": "=/home/node/.n8n/output.mp4",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        896,
        1872
      ],
      "id": "246ae012-0f3d-4e85-a27d-f51984252b65",
      "name": "Read/Write Files from Disk2"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "text": "=Analisis audio berikut dan identifikasi:\n1. Jenis kelamin pembicara (pria atau wanita).\n2. Kelompok usia (muda atau tua).\n3. Berikan alasan singkat klasifikasi tersebut.\n\nJawablah hanya dalam bahasa Indonesia dan gunakan format JSON berikut:\n{\n  \"gender\": \"pria | wanita\",\n  \"age_group\": \"muda | tua\",\n  \"alasan\": \"penjelasan singkat\"\n}",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1504,
        1872
      ],
      "id": "ec2ec2b6-cbf6-4e08-b6a4-063df215b727",
      "name": "Analyze audio",
      "credentials": {
        "googlePalmApi": {
          "id": "zmKSyYEa5jVyzYKI",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "fileSelector": "=/home/node/.n8n/output.wav",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        608,
        2112
      ],
      "id": "ae4c687f-9982-48c0-bc57-699e3b22adb6",
      "name": "Read/Write Files from Disk3"
    },
    {
      "parameters": {
        "fileSelector": "=/home/node/.n8n/output.wav",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        608,
        2240
      ],
      "id": "a1e0185b-d129-4100-b023-74f55c9939f3",
      "name": "Read/Write Files from Disk4"
    },
    {
      "parameters": {
        "fileSelector": "=/home/node/.n8n/output.wav",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        608,
        2368
      ],
      "id": "997dd5e2-8c2d-4935-bd9d-e4c19aa9b602",
      "name": "Read/Write Files from Disk5"
    },
    {
      "parameters": {
        "fileSelector": "=/home/node/.n8n/output.wav",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        608,
        2480
      ],
      "id": "a610f1d7-658f-45d7-a2cc-12db69d8ab3a",
      "name": "Read/Write Files from Disk11"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/speech-to-speech/plgKUYgnlZ1DCNh54DwJ",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "audio",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        736,
        2240
      ],
      "id": "c61843d7-3d63-4dba-b865-7e92d741944b",
      "name": "Young Man Voice Changer",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NGL8VS2GT9oa8sjJ",
          "name": "Elevenlabs API"
        }
      }
    },
    {
      "parameters": {
        "content": "## Voice Changer",
        "height": 880,
        "width": 1520,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        240,
        1776
      ],
      "id": "cfcbad7f-c498-4a1c-bb29-79c99c840f48",
      "name": "Sticky Note6"
    }
  ],
  "pinData": {},
  "connections": {
    "Text Prompt": {
      "main": [
        [
          {
            "node": "Prompt User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Image URL",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Docs",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Video URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Audio": {
      "main": [
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Audio Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Prompt": {
      "main": [
        [
          {
            "node": "Collect Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image URL": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Document Checker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Text Prompt": {
      "main": [
        [
          {
            "node": "Prompt Keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Keywords": {
      "main": [
        [
          {
            "node": "Switch Text, Images or Video1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate an Image": {
      "main": [
        [
          {
            "node": "Image Responses",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Audio": {
      "main": [
        [
          {
            "node": "Audio Responses",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Document Checker": {
      "main": [
        [
          {
            "node": "is document ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio or Text Responses": {
      "main": [
        [
          {
            "node": "Generate Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Responds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is document ?": {
      "main": [
        [
          {
            "node": "Merge Analysis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Image Text Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Switch Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt User": {
      "main": [
        [
          {
            "node": "Switch Text, Images or Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate an image": {
      "main": [
        [
          {
            "node": "Image Responses",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "General Agent": {
      "main": [
        [
          {
            "node": "Audio or Text Responses",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tasks Agent": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Docs": {
      "main": [
        [
          {
            "node": "Download Docs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Docs": {
      "main": [
        [
          {
            "node": "Analyze document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze document": {
      "main": [
        [
          {
            "node": "Merge Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Analysis": {
      "main": [
        [
          {
            "node": "Tasks Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in Invoice sheets": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in Purchase_Order sheets": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in Product sheets": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in Customer sheets": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in vendor sheets": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Image Agent": {
      "main": [
        [
          {
            "node": "Switch Text or Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video URL": {
      "main": [
        [
          {
            "node": "Download Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Video": {
      "main": [
        [
          {
            "node": "Analyze video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze video": {
      "main": [
        [
          {
            "node": "Video Text Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Prompt": {
      "main": [
        [
          {
            "node": "Ask for Video ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Text or Images": {
      "main": [
        [
          {
            "node": "Generate an Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate an image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Text, Images or Video": {
      "main": [
        [
          {
            "node": "Image Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Collect Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "All Prompt Function Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ask for Video ?": {
      "main": [
        [
          {
            "node": "All Prompt Function Code1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "All Prompt Function Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Text Prompt": {
      "main": [
        [
          {
            "node": "Video Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Agent": {
      "main": [
        [
          {
            "node": "Video Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Document": {
      "main": [
        [
          {
            "node": "Output messages",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Output messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Final Video Prompt": {
      "main": [
        [
          {
            "node": "Part 1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Part 2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Part 3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Part 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Image Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "General Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Database Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Prompt Selector",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Video Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Vertex AI-fetch Video 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video Information Extractor": {
      "main": [
        [
          {
            "node": "Final Video Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Part 2": {
      "main": [
        [
          {
            "node": "Vertex AI-VEO1 Part 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Part 3": {
      "main": [
        [
          {
            "node": "Vertex AI-VEO Part 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Part 4": {
      "main": [
        [
          {
            "node": "Vertex AI-VEO Part 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-VEO Part 1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-VEO1 Part 2": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-VEO Part 3": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-VEO Part 4": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-fetch Video 1": {
      "main": [
        [
          {
            "node": "Convert to File4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-fetch Video 2": {
      "main": [
        [
          {
            "node": "Convert to File5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-fetch Video 3": {
      "main": [
        [
          {
            "node": "Convert to File6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vertex AI-fetch Video 4": {
      "main": [
        [
          {
            "node": "Convert to File7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Vertex AI-fetch Video 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Vertex AI-fetch Video 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Vertex AI-fetch Video 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File4": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File5": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File6": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File7": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Video Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "Image Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "General Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait5": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Analyze audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk9": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Read/Write Files from Disk8": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Read/Write Files from Disk7": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Read/Write Files from Disk6": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Input": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "All Prompt Function Code": {
      "main": [
        [
          {
            "node": "General Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Part 1": {
      "main": [
        [
          {
            "node": "Vertex AI-VEO Part 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Text, Images or Video1": {
      "main": [
        [
          {
            "node": "Collect Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Image Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "All Prompt Function Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "All Prompt Function Code1": {
      "main": [
        [
          {
            "node": "Video Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Select rows from a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select rows from a table": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "All Prompt Function Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Authorized User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Database Agent": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "General Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Image Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Tasks Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Video Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Database Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get Available Tables and Fields": {
      "ai_tool": [
        [
          {
            "node": "Database Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Prompt Selector": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "ai_tool": [
        [
          {
            "node": "Database Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Collect Prompt": {
      "main": [
        [
          {
            "node": "Prompt Selector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Audio": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Video": {
      "main": [
        [
          {
            "node": "Wait5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Authorized User": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Database Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Video Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Old Male Voice Changer": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identify Character1": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Read/Write Files from Disk4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Read/Write Files from Disk5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Read/Write Files from Disk11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Young Lady Voice Changer": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Old Woman Voice Changer": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk10": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Wait6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait6": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        []
      ]
    },
    "Read/Write Files from Disk2": {
      "main": [
        [
          {
            "node": "Extract Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze audio": {
      "main": [
        [
          {
            "node": "Identify Character1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk3": {
      "main": [
        [
          {
            "node": "Old Male Voice Changer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk4": {
      "main": [
        [
          {
            "node": "Young Man Voice Changer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk5": {
      "main": [
        [
          {
            "node": "Young Lady Voice Changer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk11": {
      "main": [
        [
          {
            "node": "Old Woman Voice Changer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Young Man Voice Changer": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "ocOuElwF9L1gPLA4"
  },
  "versionId": "e606e89c-3c3e-4a2a-86dc-0d716370f751",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d0f4d4b2a9e0bd68f00ce9c97c059819e26f16e2e6264b6dbcc0043a508162c8"
  },
  "id": "ocOuElwF9L1gPLA4",
  "tags": []
}